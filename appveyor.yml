platform:
 - x86
 - x64

environment:
 matrix:
  #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
  #BUILD: vicc
  # the appropriate windows sdk currently not installed
  #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
  #BUILD: vpcd
  - BUILD: ACardEmulator
    APPVEYOR_BUILD_WORKER_IMAGE: Previous Visual Studio 2017


install:
 - ps: >-
     If ($env:Platform -Match "x86") {
       $env:MSBUILD_PLATFORM="x86"
       $env:VCVARS_PLATFORM="x86"
       $env:ARTIFACT="${env:BUILD}_win32"
       $env:X64=""
     } Else {
       $env:MSBUILD_PLATFORM="x64"
       $env:VCVARS_PLATFORM="amd64"
       $env:ARTIFACT="${env:BUILD}_win64"
       $env:X64="x64\"
     }
 - git submodule update --init --recursive

 - ps: >-
     If ($env:APPVEYOR_BUILD_WORKER_IMAGE -eq "Visual Studio 2019") {
       $env:VCVARSALL="${env:ProgramFiles(x86)}\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat"
     } ElseIf ($env:APPVEYOR_BUILD_WORKER_IMAGE -eq "Visual Studio 2017") {
       $env:VCVARSALL="${env:ProgramFiles(x86)}\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat"
     } ElseIf ($env:APPVEYOR_BUILD_WORKER_IMAGE -eq "Visual Studio 2015") {
       $env:VCVARSALL="${env:VS140COMNTOOLS}\..\..\VC\vcvarsall.bat"
     } ElseIf ($env:APPVEYOR_BUILD_WORKER_IMAGE -eq "Visual Studio 2013") {
       $env:VCVARSALL="${env:VS121COMNTOOLS}\..\..\VC\vcvarsall.bat"
     }

 - set JAVA_HOME="C:\Program Files\Java\jdk1.8.0"
 - set ANDROID_HOME=C:\android
 - mkdir "%ANDROID_HOME%"
 - appveyor DownloadFile "https://dl.google.com/android/repository/tools_r25.2.3-windows.zip" -FileName android-tools.zip
 - 7z x android-tools.zip -o"%ANDROID_HOME%" > nul
 - echo y | "%ANDROID_HOME%\tools\android.bat" --silent update sdk --no-ui --all --filter platform-tools,tools,build-tools-25.0.0,android-23,extra-google-m2repository,extra-android-m2repository
   # on windows we need to accept sublicenses for the new tooling, wee. 30 is an arbitrary number,
   # but should be the maximum number of licenses we explicitly need to type "Y ENTER" for.
   # also, the sdkmanager in all its glory leaks a bit of output to stderr, and powershell
   # and appveyor interpret that as errors, and blows up. so, when piping in our "Y ENTER"
   # responses, we invoke cmd so we can redirect stderr to stdout, and tell it to --update itself.
 - ps: for($i=0;$i -lt 30;$i++) { $response += "y`n"}; $response | cmd /c 'C:\android\tools\bin\sdkmanager.bat 2>&1' --update

 - set PATH=C:\cygwin\bin;%PATH%

 - call .ci\%BUILD%_install.bat

build_script:
 - md %ARTIFACT%

 - call ".ci\\%BUILD%_build.bat"

 - 7z a %ARTIFACT%.zip %ARTIFACT%
 - appveyor PushArtifact %ARTIFACT%.zip
